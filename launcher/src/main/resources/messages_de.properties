# Group command messages
command.group.usage.general=Invalid command. Use 'group' for help.
command.group.usage.status=Usage: group status <groupName>
command.group.status.notfound=Group '{0}' not found.
command.group.status.offline=Group '{0}' is offline.
command.group.status.online=Group '{0}' is online.
command.group.status.starting=Group '{0}' is starting.
command.group.status.stopping=Group '{0}' is stopping.
command.group.status.unknown=Group '{0}' has an unknown status.
command.group.create.info=Please enter the name of the group.
command.group.create.exit=Type 'exit' to cancel the creation process.
command.group.create.aborted=Group creation aborted.
command.group.create.noname=Group name cannot be empty. Please try again.
command.group.create.ram=Please enter the amount of RAM (in MB) for the group.
command.group.create.ramerror=Invalid RAM value. Please enter a positive number.
command.group.create.group=Please specify the group type (e.g., bukkit, proxy).
command.group.create.groupexample=Example: bukkit, proxy
command.group.create.groupexit=Type 'exit' to cancel the creation process.
command.group.create.nogroup=Group type cannot be empty. Please try again.
command.group.create.version=Please specify the version for the group.
command.group.create.versionexample=Example: 1.19.2
command.group.create.versionexit=Type 'exit' to cancel the creation process.
command.group.create.noversion=Version cannot be empty. Please try again.
command.group.create.summary=Group creation summary:
command.group.create.confirm=Type 'yes' to confirm or 'no' to cancel.
command.group.list.nogroups=No groups found.
command.group.list.header=Available groups:
command.group.list.error=Error reading group configuration file: {0}

# Group loader messages
error_loading_service=Error loading service
no_services_found=No services found
yes=Yes
no=No

# BungeeTask messages
service_already_running=Service '{0}' is already running.
service_started=Service '{0}' has been started successfully.
failed_to_start_service=Failed to start service '{0}'
service_not_running=Service '{0}' is not running.
service_restarted=Service '{0}' has been restarted successfully.
failed_to_restart_service=Failed to restart service '{0}'
service_restarting=Restarting service '{0}'...
service_stopped=Service '{0}' has been stopped successfully.
failed_to_stop_service=Failed to stop service '{0}'
failed_to_fetch_allocations=Failed to fetch allocations
no_free_allocation=No free allocation available
failed_to_create_configs_folder=Failed to create the configs folder
error_saving_service_config=Error saving service configuration
service_created=Service '{0}' has been created successfully.
failed_to_create_server=Failed to create server '{0}'
waiting_for_service=Waiting for service '{0}' to restart...
failed_to_save_service_config=Failed to save service configuration

# ConsoleManager messages
unknown_message_type=Unknown message type
error_clearing_console=Error clearing the console

# CommandManager messages
console_exit=Exiting console...
error_executing_command=An error occurred while executing the command

# General messages
hugecloud.starting=Starting HugeCloud...
hugecloud.starting.error=Error while starting HugeCloud: {0}
hugecloud.starting.success=HugeCloud started successfully!
hugecloud.loading.services=Loading services...
hugecloud.loading.services.error=Error while loading services: {0}
hugecloud.loading.services.success=Services loaded successfully!
hugecloud.starting.commandsystem=Starting command system...
hugecloud.starting.commandsystem.error=Error while starting command system: {0}
hugecloud.starting.commandsystem.success=Command system started successfully!
hugecloud.shutdown.start=Shutting down HugeCloud...
hugecloud.shutdown.error=Error while shutting down service {0}: {1}
hugecloud.shutdown.success=HugeCloud shut down successfully!
hugecloud.shutdown.finalerror=Final shutdown error: {0}
hugecloud.startup.error=Error while starting service {0}: {1}

# APi
api.key.invalid=The provided API key is invalid.
api.group.status.unknown=The status of the group is unknown.

# Initialization messages
hugecloud.welcome=Welcome to HugeCloud!
hugecloud.init.start=Initializing HugeCloud...
hugecloud.init.error=Initialization error: {0}
hugecloud.init.agree=Do you agree to the terms and conditions?
hugecloud.init.agree.yesno=Type 'yes' to agree or 'no' to decline.
hugecloud.init.agree.exit=Type 'exit' to quit the setup.
hugecloud.init.agree.error=Invalid input. Please try again.
hugecloud.init.agree.decline=You declined the terms. Exiting setup.
hugecloud.init.agree.thanks=Thank you for agreeing to the terms!
hugecloud.init.api=Please provide your API key.
hugecloud.init.api.error=Error while processing API key: {0}
hugecloud.init.apikey=Enter your API key:
hugecloud.init.apikey.warn=The API key must have full admin rights.
hugecloud.init.apikey.exit=Type 'exit' to quit the setup.
hugecloud.init.apikey.error=Invalid API key. Please try again.
hugecloud.init.clientapikey=Enter your client API key:
hugecloud.init.clientapikey.warn=The client API key must have limited access.
hugecloud.init.clientapikey.exit=Type 'exit' to quit the setup.
hugecloud.init.clientapikey.error=Invalid client API key. Please try again.
hugecloud.init.url.error=Invalid URL. Please ensure it starts with http:// or https://.
hugecloud.init.local.error=Failed to create the local folder.
hugecloud.init.groups.error=Failed to create the groups folder.
hugecloud.init.templates.error=Failed to create the templates folder.
hugecloud.init.success=Initialization completed successfully!

# Setup messages
hugecloud.setup=HugeCloud Setup